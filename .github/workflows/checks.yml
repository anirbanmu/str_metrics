# THIS IS A GENERATED FILE. DO NOT EDIT MANUALLY. EDIT & RUN gen_github_workflow.rb TO REGENERATE.
---
name: checks
'on':
- push
jobs:
  test:
    strategy:
      matrix:
        ruby:
        - '2.7'
        - '2.6'
        - '2.5'
        - '2.4'
        - '2.3'
        - jruby
        - truffleruby
        rust:
        - 1.46.0
        - stable
        - nightly
        - 1.45.2
        - 1.44.1
        - 1.43.1
        - 1.42.0
        - 1.41.1
        - 1.40.0
        - 1.39.0
        - 1.38.0
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: "${{ matrix.ruby }}"
    - uses: actions-rs/toolchain@v1
      id: rust_install
      with:
        profile: minimal
        toolchain: "${{ matrix.rust }}"
        default: true
    - name: Generate Gemfile.lock
      run: bundle lock
    - name: Cache gems
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: v1-${{ runner.os }}-${{ matrix.ruby }}-gems-${{ hashFiles('**/Gemfile.lock')
          }}
        restore-keys: v1-${{ runner.os }}-${{ matrix.ruby }}-gems-
    - name: Generate Cargo.lock
      run: cargo generate-lockfile
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: "~/.cargo/git"
        key: v0-${{ runner.os }}-${{ matrix.rust }}-${{ steps.rust_install.outputs.rustc_hash
          }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: v0-${{ runner.os }}-${{ matrix.rust }}-${{ steps.rust_install.outputs.rustc_hash
          }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    - name: Install gems
      run: |-
        bundle config path vendor/bundle
        bundle install --jobs=4 --retry=3
    - name: rspec
      run: bundle exec rake spec
  rubocop:
    strategy:
      matrix:
        ruby:
        - '2.7'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: "${{ matrix.ruby }}"
    - name: Generate Gemfile.lock
      run: bundle lock
    - name: Cache gems
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: v1-${{ runner.os }}-${{ matrix.ruby }}-gems-${{ hashFiles('**/Gemfile.lock')
          }}
        restore-keys: v1-${{ runner.os }}-${{ matrix.ruby }}-gems-
    - name: Install gems
      run: |-
        bundle config path vendor/bundle
        bundle install --jobs=4 --retry=3
    - name: rubocop
      run: bundle exec rubocop --parallel
  sanity-test-windows-latest:
    strategy:
      matrix:
        ruby:
        - '2.7'
        rust:
        - 1.46.0
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: "${{ matrix.ruby }}"
    - uses: actions-rs/toolchain@v1
      id: rust_install
      with:
        profile: minimal
        toolchain: "${{ matrix.rust }}"
        default: true
    - name: Generate Gemfile.lock
      run: bundle lock
    - name: Cache gems
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: v1-${{ runner.os }}-${{ matrix.ruby }}-gems-${{ hashFiles('**/Gemfile.lock')
          }}
        restore-keys: v1-${{ runner.os }}-${{ matrix.ruby }}-gems-
    - name: Generate Cargo.lock
      run: cargo generate-lockfile
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: "~/.cargo/git"
        key: v0-${{ runner.os }}-${{ matrix.rust }}-${{ steps.rust_install.outputs.rustc_hash
          }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: v0-${{ runner.os }}-${{ matrix.rust }}-${{ steps.rust_install.outputs.rustc_hash
          }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    - name: Install gems
      run: |-
        bundle config path vendor/bundle
        bundle install --jobs=4 --retry=3
    - name: rspec
      run: bundle exec rake spec
  sanity-test-macos-latest:
    strategy:
      matrix:
        ruby:
        - '2.7'
        rust:
        - 1.46.0
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: "${{ matrix.ruby }}"
    - uses: actions-rs/toolchain@v1
      id: rust_install
      with:
        profile: minimal
        toolchain: "${{ matrix.rust }}"
        default: true
    - name: Generate Gemfile.lock
      run: bundle lock
    - name: Cache gems
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: v1-${{ runner.os }}-${{ matrix.ruby }}-gems-${{ hashFiles('**/Gemfile.lock')
          }}
        restore-keys: v1-${{ runner.os }}-${{ matrix.ruby }}-gems-
    - name: Generate Cargo.lock
      run: cargo generate-lockfile
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: "~/.cargo/git"
        key: v0-${{ runner.os }}-${{ matrix.rust }}-${{ steps.rust_install.outputs.rustc_hash
          }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: v0-${{ runner.os }}-${{ matrix.rust }}-${{ steps.rust_install.outputs.rustc_hash
          }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    - name: Install gems
      run: |-
        bundle config path vendor/bundle
        bundle install --jobs=4 --retry=3
    - name: rspec
      run: bundle exec rake spec
  gem-install-ubuntu-latest:
    strategy:
      matrix:
        ruby:
        - '2.7'
        rust:
        - 1.46.0
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: "${{ matrix.ruby }}"
    - uses: actions-rs/toolchain@v1
      id: rust_install
      with:
        profile: minimal
        toolchain: "${{ matrix.rust }}"
        default: true
    - name: Generate Gemfile.lock
      run: bundle lock
    - name: Cache gems
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: v1-${{ runner.os }}-${{ matrix.ruby }}-gems-${{ hashFiles('**/Gemfile.lock')
          }}
        restore-keys: v1-${{ runner.os }}-${{ matrix.ruby }}-gems-
    - name: Generate Cargo.lock
      run: cargo generate-lockfile
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: "~/.cargo/git"
        key: v0-${{ runner.os }}-${{ matrix.rust }}-${{ steps.rust_install.outputs.rustc_hash
          }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: v0-${{ runner.os }}-${{ matrix.rust }}-${{ steps.rust_install.outputs.rustc_hash
          }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    - name: Install gems
      run: |-
        bundle config path vendor/bundle
        bundle install --jobs=4 --retry=3
    - name: Package gem
      run: bundle exec rake build
    - name: Install packaged gem
      run: gem install pkg/str_metrics-0.1.1.gem
    - name: Make sure gem is loadable
      run: ruby -rstr_metrics -e 'puts StrMetrics::VERSION'
  gem-install-macos-latest:
    strategy:
      matrix:
        ruby:
        - '2.7'
        rust:
        - 1.46.0
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: "${{ matrix.ruby }}"
    - uses: actions-rs/toolchain@v1
      id: rust_install
      with:
        profile: minimal
        toolchain: "${{ matrix.rust }}"
        default: true
    - name: Generate Gemfile.lock
      run: bundle lock
    - name: Cache gems
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: v1-${{ runner.os }}-${{ matrix.ruby }}-gems-${{ hashFiles('**/Gemfile.lock')
          }}
        restore-keys: v1-${{ runner.os }}-${{ matrix.ruby }}-gems-
    - name: Generate Cargo.lock
      run: cargo generate-lockfile
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: "~/.cargo/git"
        key: v0-${{ runner.os }}-${{ matrix.rust }}-${{ steps.rust_install.outputs.rustc_hash
          }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: v0-${{ runner.os }}-${{ matrix.rust }}-${{ steps.rust_install.outputs.rustc_hash
          }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    - name: Install gems
      run: |-
        bundle config path vendor/bundle
        bundle install --jobs=4 --retry=3
    - name: Package gem
      run: bundle exec rake build
    - name: Install packaged gem
      run: gem install pkg/str_metrics-0.1.1.gem
    - name: Make sure gem is loadable
      run: ruby -rstr_metrics -e 'puts StrMetrics::VERSION'
  gem-install-windows-latest:
    strategy:
      matrix:
        ruby:
        - '2.7'
        rust:
        - 1.46.0
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: "${{ matrix.ruby }}"
    - uses: actions-rs/toolchain@v1
      id: rust_install
      with:
        profile: minimal
        toolchain: "${{ matrix.rust }}"
        default: true
    - name: Generate Gemfile.lock
      run: bundle lock
    - name: Cache gems
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: v1-${{ runner.os }}-${{ matrix.ruby }}-gems-${{ hashFiles('**/Gemfile.lock')
          }}
        restore-keys: v1-${{ runner.os }}-${{ matrix.ruby }}-gems-
    - name: Generate Cargo.lock
      run: cargo generate-lockfile
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: "~/.cargo/git"
        key: v0-${{ runner.os }}-${{ matrix.rust }}-${{ steps.rust_install.outputs.rustc_hash
          }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: v0-${{ runner.os }}-${{ matrix.rust }}-${{ steps.rust_install.outputs.rustc_hash
          }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    - name: Install gems
      run: |-
        bundle config path vendor/bundle
        bundle install --jobs=4 --retry=3
    - name: Package gem
      run: bundle exec rake build
    - name: Install packaged gem
      run: gem install pkg/str_metrics-0.1.1.gem
    - name: Make sure gem is loadable
      run: ruby -rstr_metrics -e 'puts StrMetrics::VERSION'
